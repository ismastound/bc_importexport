{
    "name": "sfra-boilerplate",
    "version": "2.4.0",
    "description": "Astound architecture for SFRA projects",
    "main": "npm start",
    "engines": {
        "node": ">=14",
        "npm": ">=7"
    },
    "dependencies": {
        "@googlemaps/markerclusterer": "^2.0.5",
        "@types/google.maps": "3.47.3",
        "cleave.js": "1.6.0",
        "core-js": "3.21.0",
        "diff-dom": "4.2.3",
        "eventemitter3": "4.0.7",
        "imask": "6.3.0",
        "intl-tel-input": "17.0.15",
        "mustache": "4.2.0",
        "photoswipe": "4.1.3",
        "smoothscroll-polyfill": "0.4.4",
        "source-list-map": "2.0.1",
        "whatwg-fetch": "3.6.2",
        "yet-another-abortcontroller-polyfill": "0.0.4",
        "zxcvbn": "4.4.2"
    },
    "devDependencies": {
        "@babel/core": "7.16.12",
        "@babel/eslint-parser": "7.17.0",
        "@babel/eslint-plugin": "7.16.5",
        "@babel/plugin-syntax-dynamic-import": "7.8.3",
        "@babel/plugin-transform-runtime": "7.16.10",
        "@babel/preset-env": "7.16.11",
        "@babel/preset-typescript": "7.16.7",
        "@babel/runtime": "7.17.2",
        "@babel/types": "7.16.8",
        "@commitlint/cli": "16.2.1",
        "@commitlint/config-conventional": "16.2.1",
        "@types/grecaptcha": "3.0.3",
        "@types/intl-tel-input": "^17.0.4",
        "@types/webpack-env": "1.16.3",
        "@typescript-eslint/eslint-plugin": "5.12.0",
        "@typescript-eslint/parser": "5.12.0",
        "async-polling": "0.2.1",
        "atlas-guide": "2.2.10",
        "autoprefixer": "10.4.2",
        "babel-eslint": "11.0.0-beta.2",
        "babel-loader": "8.2.3",
        "better-docs": "2.7.2",
        "case-sensitive-paths-webpack-plugin": "2.4.0",
        "chai": "4.3.6",
        "chai-subset": "1.6.0",
        "cheerio": "1.0.0-rc.10",
        "chokidar": "3.5.2",
        "conf": "10.1.1",
        "conventional-changelog-boilerplate": "file:./utils/conventional-changelog-boilerplate",
        "css-loader": "6.6.0",
        "dwdav": "3.5.1",
        "dwupload": "3.8.2",
        "eslint": "8.8.0",
        "eslint-config-airbnb-base": "15.0.0",
        "eslint-plugin-import": "2.25.4",
        "eslint-plugin-jsdoc": "37.8.0",
        "eslint-plugin-markdown": "2.2.1",
        "eslint-plugin-sitegenesis": "1.0.0",
        "eslint-plugin-sonarjs": "0.12.0",
        "eslint-plugin-spellcheck": "0.0.19",
        "fork-ts-checker-webpack-plugin": "7.0.0",
        "globby": "13.1.1",
        "inquirer": "8.2.0",
        "isbinaryfile": "4.0.8",
        "isml-linter": "5.40.0",
        "jsdoc": "3.6.10",
        "jsdoc-export-default-interop": "0.3.1",
        "jsdoc-plugin-typescript": "2.0.6",
        "jsonwebtoken": "8.5.1",
        "lnk": "1.1.0",
        "micromatch": "4.0.4",
        "mini-css-extract-plugin": "2.5.3",
        "mocha": "9.2.1",
        "npm-run-all": "4.1.5",
        "nyc": "15.1.0",
        "open": "8.4.0",
        "optionator": "0.9.1",
        "postcss": "8.4.6",
        "postcss-loader": "6.2.1",
        "postcss-scss": "4.0.3",
        "properties-parser": "0.3.1",
        "proxyquire": "2.1.3",
        "pupa": "3.1.0",
        "request-promise": "4.2.6",
        "sass": "1.49.7",
        "sass-loader": "12.6.0",
        "sfcc-catalog-reducer": "1.1.1",
        "sfcc-ci": "2.9.1",
        "shelljs": "0.8.5",
        "shx": "0.3.4",
        "sinon": "13.0.1",
        "standard-version": "9.3.2",
        "string-replace-loader": "3.1.0",
        "stylelint": "14.4.0",
        "stylelint-order": "5.0.0",
        "stylelint-scss": "4.1.0",
        "terser-webpack-plugin": "5.3.1",
        "tiny-lr": "2.0.0",
        "typescript": "4.5.5",
        "webpack": "5.68.0",
        "webpack-assets-manifest": "5.1.0",
        "webpack-bundle-analyzer": "4.5.0",
        "webpack-cli": "4.9.2",
        "webpack-dev-server": "4.7.4",
        "webpack-format-messages": "3.0.1",
        "webpack-glob-entries": "1.0.1",
        "webpack-subresource-integrity": "5.1.0",
        "write-file-webpack-plugin": "4.5.1",
        "xml2js": "0.4.23",
        "yazl": "2.5.1"
    },
    "optionalDependencies": {
        "fsevents": "2.3.2"
    },
    "scripts": {
        "preinstall": "npm run init:check:node",
        "postinstall": "npm run init",
        "init": "npm run init:hooks && npm run init:config && npm run init:cartridges",
        "init:check:node": "node ./utils/helpers/check-node-version.js",
        "init:config": "node ./utils/helpers/init-dwjson.js",
        "init:hooks": "node ./utils/githooks/copy-hooks.js",
        "init:cartridges": "node ./utils/helpers/repoBuilder/symlink-linked-repo.mjs",
        "init:project": "node ./utils/helpers/projectConfigurator/index.mjs",
        "init:repo": "node ./utils/helpers/repoBuilder/index.mjs",
        "build": "webpack --mode development",
        "build:meta": "node ./utils/helpers/meta/metaCompilerRunner.mjs --copy-files",
        "build:meta:site": "node ./utils/helpers/meta/metaCompilerRunner.mjs --copy-files --pattern \"**/site.xml\"",
        "build:meta:prod": "node ./utils/helpers/meta/metaCompilerRunner.mjs --copy-files --prod",
        "build:release": "npm run build:meta:site && webpack --mode production --env production && npm run compile:assets && npm run compile:slots && npm run build:styleguide && npm run build:icons:preview",
        "build:styleguide": "atlas-guide --build=./cartridges/app_custom_core/cartridge/client/default/scss/.atlasrc.json",
        "build:icons:preview": "node utils/helpers/icons/generateIconsPreview.js",
        "build:mails:styles": "node utils/helpers/mails/stylesToResourceBundle.js",
        "dev:server": "webpack serve --mode development --hot --config-name core",
        "dev:watch": "webpack --watch",
        "dev:nomap": "webpack serve --mode development --hot --skipsourcemaps --config-name core",
        "dev:mails:watch": "node utils/helpers/mails/stylesToResourceBundle.js --watch",
        "upload": "npm run build:release && node ./utils/helpers/dwupload",
        "upload:watch": "node ./utils/helpers/dwupload.js --watch",
        "upload:watch:symlinks": "node ./utils/helpers/dwupload.js --watch --symlinks",
        "upload:site": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-site-upload",
        "upload:meta": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-meta-upload",
        "import:site": "npm run init:config && npm run compile:assets && npm run compile:slots && node utils/tasks/dwhelpers.mjs --dw-site-import",
        "import:site:soft": "npm run init:config && npm run compile:assets && npm run compile:slots && node utils/tasks/dwhelpers.mjs --dw-site-soft-import",
        "import:site:preset": "npm run init:config && npm run compile:assets && npm run compile:slots && node utils/tasks/dwhelpers.mjs --dw-site-import --select-set",
        "import:site:preset:soft": "npm run init:config && npm run compile:assets && npm run compile:slots && node utils/tasks/dwhelpers.mjs --dw-site-soft-import --select-set",
        "lint": "npm-run-all -p lint:scss lint:js lint:ts lint:isml",
        "lint:js": "eslint --ext .js,.ts ./cartridges/ ./test",
        "lint:ts": "node utils/tasks/ts-lint.mjs",
        "lint:scss": "stylelint \"./cartridges/**/*.scss\"",
        "lint:isml": "npx isml-linter",
        "release": "standard-version",
        "compile:assets": "node utils/helpers/assetsCompiler/index.mjs",
        "compile:slots": "node utils/helpers/assetsCompiler/index.mjs --slots",
        "decompile:assets": "node utils/helpers/assetsCompiler/index.mjs --decompile",
        "decompile:slots": "node utils/helpers/assetsCompiler/index.mjs --decompile --slots",
        "logs:all:clear": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-clear-logs",
        "logs:today:clear": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-clear-days-logs",
        "logs:all": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-download-logs",
        "logs:today": "npm run init:config && node utils/tasks/dwhelpers.mjs --dw-download-days-logs",
        "sandbox": "node utils/helpers/ci/sandbox.js --run",
        "sandbox:start": "node utils/helpers/ci/sandbox.js --start",
        "sandbox:stop": "node utils/helpers/ci/sandbox.js --stop",
        "sandbox:list": "node utils/helpers/ci/sandbox.js --list",
        "sandbox:status": "node utils/helpers/ci/sandbox.js --status",
        "sandbox:create": "node utils/helpers/ci/sandbox.js --create",
        "sandbox:delete": "node utils/helpers/ci/sandbox.js --delete",
        "sandbox:prolong": "node utils/helpers/ci/sandbox.js --prolong",
        "stat:actionspoints": "node utils/helpers/stat/actionPoints.js",
        "reduce:catalog": "sfcc-catalog-reducer",
        "rename:cartridges": "node ./utils/helpers/projectConfigurator/renameCartridges.mjs",
        "docs": "node ./utils/tasks/jsdoc.mjs",
        "test:unit": "node --preserve-symlinks utils/tasks/tests.mjs --unit test/unit/**/*.js",
        "test:integrationinit": "node --preserve-symlinks utils/tasks/tests.mjs --integrationInitialize --files test/integration/configs/**/*.json",
        "test:integration": "node --preserve-symlinks utils/tasks/tests.mjs --integration test/integration/*.mjs",
        "test:cover": "nyc node --preserve-symlinks utils/tasks/tests.mjs --unit test/unit/**/*.js",
        "test:npmcommands": "npm-run-all upload import:site lint test:unit build:release init dev:server",
        "git:add": "node ./utils/helpers/repoCommands/all-repos-git-add.js",
        "git:commit": "node ./utils/helpers/repoCommands/all-repos-git-commit.js",
        "git:status": "node ./utils/helpers/repoCommands/all-repos-git-status.js",
        "git:reset": "node ./utils/helpers/repoCommands/all-repos-git-reset.js",
        "dev:server:retail": "webpack serve --mode development --hot --config-name retail",
        "dev:nomap:retail": "npm run dev:nomap -- --name retail",
        "dev:watch:retail": "npm run dev:watch -- --name retail",
        "build:retail": "npm run build -- --name retail"
    },
    "git-hooks": {
        "config": {
            "restrictFolders": [
                "**/cartridges/app_storefront_base/**",
                "**/cartridges/modules/server/**"
            ],
            "restrictBranches": [
                "master",
                "master-boilerplate",
                "develop",
                "release/*"
            ]
        },
        "pre-commit": [
            "utils/githooks/pre-commit-check-restriction.js",
            "utils/githooks/pre-commit-lint-scss.js",
            "utils/githooks/pre-commit-lint-js.js",
            "utils/githooks/pre-commit-lint-ts.js",
            "utils/githooks/pre-commit-lint-isml.js",
            "utils/githooks/pre-commit-unit-tests.js"
        ],
        "post-checkout": [
            "utils/githooks/post-checkout-npm-update.js"
        ],
        "commit-msg": [
            "utils/githooks/commit-msg-pattern.js"
        ],
        "pre-push": [
            "utils/githooks/pre-commit-check-restriction.js"
        ]
    },
    "keywords": [
        "astound",
        "sfra",
        "salesforce",
        "boilerplate"
    ],
    "author": "astoundcommerce.com",
    "license": "ISC",
    "browserslist": [
        "last 1 Edge versions",
        "last 2 Chrome versions",
        "last 2 Safari versions",
        "last 2 Firefox versions",
        "last 2 iOS versions",
        "last 2 ChromeAndroid versions"
    ],
    "standard-version": {
        "tagPrefix": "",
        "preset": "boilerplate",
        "releaseCommitMessageFormat": "RELEASE: {{currentTag}}",
        "skip": {
            "commit": true,
            "tag": true
        }
    },
    "paths": {
        "base": "./cartridges/app_storefront_base/"
    },
    "config": {
        "webpack": [
            {
                "name": "core",
                "cartridge": "app_custom_core",
                "entry": "{js,scss}/*.{js,ts,scss}",
                "src": "client/default/",
                "dest": "static/default/",
                "alias": {
                    "widgets": "./cartridges/app_storefront_widgets/cartridge/client/default/js/widgets",
                    "gtm": "./cartridges/int_gtm_w/cartridge/client/js",
                    "core": "./cartridges/app_custom_core/cartridge/client/default/js/widgets",
                    "config": "./cartridges/app_storefront_widgets/cartridge/client/default/js/config"
                },
                "includePaths": [],
                "compileForSites": [
                    "Boilerplate-NA",
                    "Boilerplate-UK",
                    "Boilerplate-INT",
                    "Boilerplate-PD"
                ],
                "cartridgePath": ""
            },
            {
                "name": "ckeditor",
                "cartridge": "bm_ckeditor",
                "entry": "scss/*.scss",
                "src": "client/default/",
                "dest": "static/default/compiled",
                "includePaths": [
                    "./cartridges/app_custom_core/cartridge/client/default/scss",
                    "./cartridges/app_page_designer_ext/cartridge/client/default/scss"
                ],
                "compileForSites": [
                    "Boilerplate-PD"
                ],
                "cartridgePath": ""
            },
            {
                "name": "serviceWorker",
                "cartridge": "plugin_serviceworker_w",
                "entry": "js/sw/service-worker.ts",
                "src": "client/default/",
                "dest": "static/default/js/",
                "includePaths": [],
                "tsconfig": "./cartridges/plugin_serviceworker_w/cartridge/client/default/js/sw/tsconfig.json"
            },
            {
                "name": "retail",
                "cartridge": "app_velocity_luxury_retail",
                "entry": "{js,scss}/*.{js,ts,scss}",
                "src": "client/default/",
                "dest": "static/default/",
                "alias": {
                    "widgets": "./cartridges/app_storefront_widgets/cartridge/client/default/js/widgets",
                    "gtm": "./cartridges/int_gtm_w/cartridge/client/js",
                    "core": "./cartridges/app_custom_core/cartridge/client/default/js/widgets",
                    "config": "./cartridges/app_storefront_widgets/cartridge/client/default/js/config",
                    "retail": "./cartridges/app_velocity_luxury_retail/cartridge/client/default/js/widgets"
                },
                "includePaths": [
                    "./cartridges/app_custom_core/cartridge/client/default/scss/"
                ],
                "compileForSites": [
                    "Velocity-Luxury-Retail"
                ],
                "cartridgePath": ""
            }
        ],
        "meta": {
            "siteTemplateFolder": "./meta/site_template",
            "siteTemplateExtensionFolder": "./meta/site_template_extension",
            "compiledSiteTemplateFolder": "./meta/compiled_meta",
            "importExcludePattern": [
                "catalogs/**",
                "pricebooks/**",
                "inventory-lists/**",
                "libraries/*/static/**"
            ],
            "libraries": [
                {
                    "src": "meta/content/libraries/library-shared/",
                    "srcExtension": "meta/content_extension/*/libraries/library-shared",
                    "dest": "meta/site_template/libraries/library-shared/"
                },
                {
                    "src": "meta/content_extension/sfra-velocity/libraries/velocity-luxury-retail-content/",
                    "srcExtension": "meta/content_extension/*/libraries/velocity-luxury-retail-content",
                    "dest": "meta/site_template/libraries/velocity-luxury-retail-content/"
                }
            ],
            "slots": [
                {
                    "src": "meta/content/slots/Boilerplate-NA/",
                    "dest": "meta/site_template/sites/Boilerplate-NA/"
                },
                {
                    "src": "meta/content/slots/Boilerplate-UK/",
                    "dest": "meta/site_template/sites/Boilerplate-UK/"
                },
                {
                    "src": "meta/content/slots/Boilerplate-INT/",
                    "dest": "meta/site_template/sites/Boilerplate-INT/"
                },
                {
                    "src": "meta/content/slots/Boilerplate-ME/",
                    "dest": "meta/site_template/sites/Boilerplate-ME/"
                },
                {
                    "src": "meta/content_extension/sfra-velocity/slots/Velocity-Luxury-Retail/",
                    "dest": "meta/site_template/sites/Velocity-Luxury-Retail/"
                }
            ]
        },
        "deployment": {
            "instanceName": "sandbox",
            "jobs": {
                "reindex": "Reindex",
                "rebuildurl": "RebuildURLs"
            }
        }
    },
    "catalogReducer": {
        "src": {
            "master": "./meta/site_template/catalogs/boilerplate-catalog/catalog.xml",
            "navigation": "./meta/site_template/catalogs/boilerplate-catalog/catalog.xml",
            "minifiedMaster": "./meta/site_template/catalogs/boilerplate-catalog/catalog_minified.xml"
        },
        "enabledCache": false,
        "cleanupData": true,
        "categoriesConfig": {
            "default": {
                "master": 0,
                "set": 0,
                "bundle": 0,
                "standard": 0
            },
            "deals": {
                "master": 1,
                "set": 0,
                "bundle": 0,
                "standard": 10
            }
        }
    },
    "svgIcons": {
        "src": "./cartridges/app_storefront_widgets/cartridge/templates/default/common/icons/"
    },
    "mailStyles": {
        "src": "./cartridges/app_storefront_widgets/cartridge/templates/default/mails/styles/mails.scss",
        "dest": "./cartridges/app_storefront_widgets/cartridge/templates/resources/_mailStyles.properties"
    }
}
